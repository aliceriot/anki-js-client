{"version":3,"sources":["DialogField.js","Dialog.js","color.js","Kanji.js","Vocab.js","db.js","Level.js","HomePage.js","serviceWorker.js","index.js","App.js"],"names":["DialogField","props","item","label","fieldName","html","className","dangerouslySetInnerHTML","__html","fields","value","Dialog","handleClickOutside","evt","hide","children","this","open","Component","onClickOutside","intervalToColor","interval","r","g","percentage","Math","round","b","toString","slice","Kanji","kanji","useState","showDialog","setShowDialog","Fragment","onClick","style","backgroundColor","interval_avg","Characters","Vocab","vocab","key","db","Dexie","version","stores","window","Level","level","expanded","setExpanded","setKanji","setVocab","kanjiLearned","setKanjiLearned","vocabLearned","setVocabLearned","useEffect","a","where","equals","toArray","and","count","foo","class","length","map","levels","times","n","HomePage","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c3747032.chunk.js","sourcesContent":["import React from \"react\"\n\nexport default function DialogField(props) {\n  const { item, label, fieldName, html } = props\n\n  return (\n    <div className=\"dialog-field\">\n      <div className=\"label\">{label}:</div>\n      <div className=\"value\">\n        {html ? (\n          <div\n            dangerouslySetInnerHTML={{ __html: item.fields[fieldName].value }}\n          />\n        ) : (\n          item.fields[fieldName].value\n        )}\n      </div>\n    </div>\n  )\n}\n","import React, { Component } from \"react\"\nimport onClickOutside from \"react-onclickoutside\"\n\nclass Dialog extends Component {\n  handleClickOutside = evt => {\n    const { hide } = this.props\n    hide()\n  }\n\n  render() {\n    const { children } = this.props\n    return (\n      <dialog open className=\"item-dialog\">\n        {children}\n      </dialog>\n    )\n  }\n}\n\nexport default onClickOutside(Dialog)\n","export const intervalToColor = interval => {\n  let r,\n    g,\n    b = 0\n\n  // arbitrarily high number\n  let percentage = interval > 500 ? 1 : interval / 500.0\n\n  percentage = percentage * 100\n\n  if (percentage < 50) {\n    r = 255\n    g = Math.round(5.1 * percentage)\n  } else {\n    g = 255\n    r = Math.round(510 - 5.1 * percentage)\n  }\n  let h = r * 0x10000 + g * 0x100 + b * 0x1\n  return \"#\" + (\"000000\" + h.toString(16)).slice(-6)\n}\n","import React, { useState } from \"react\"\n\nimport DialogField from \"./DialogField\"\nimport Dialog from \"./Dialog\"\n\nimport { intervalToColor } from \"./color\"\n\nexport default function Kanji(props) {\n  const { kanji } = props\n\n  const [showDialog, setShowDialog] = useState(false)\n\n  return kanji ? (\n    <React.Fragment>\n      <div\n        className=\"kanji\"\n        onClick={() => setShowDialog(true)}\n        style={{\n          backgroundColor: kanji.interval_avg\n            ? intervalToColor(kanji.interval_avg)\n            : \"white\"\n        }}\n      >\n        {kanji.fields.Characters.value}\n      </div>\n      {showDialog ? (\n        <Dialog hide={() => setShowDialog(false)}>\n          <h2 className=\"dialog-title\">{kanji.fields.Characters.value}</h2>\n          <DialogField item={kanji} label=\"meaning\" fieldName=\"Meaning\" />\n          <DialogField\n            item={kanji}\n            label=\"音読み\"\n            fieldName=\"Reading_Onyomi\"\n            html\n          />\n          <DialogField\n            item={kanji}\n            label=\"訓読み\"\n            fieldName=\"Reading_Kunyomi\"\n            html\n          />\n          <DialogField item={kanji} label=\"部首\" fieldName=\"Component_Names\" />\n          <DialogField\n            item={kanji}\n            label=\"meaning mnemonic\"\n            fieldName=\"Meaning_Mnemonic\"\n            html\n          />\n          <DialogField\n            item={kanji}\n            label=\"meaning info\"\n            fieldName=\"Meaning_Info\"\n            html\n          />\n          <DialogField\n            item={kanji}\n            label=\"reading mnemonic\"\n            fieldName=\"Reading_Mnemonic\"\n            html\n          />\n          <DialogField\n            item={kanji}\n            label=\"reading info\"\n            fieldName=\"Reading_Info\"\n            html\n          />\n        </Dialog>\n      ) : null}\n    </React.Fragment>\n  ) : null\n}\n","import React, { useState } from \"react\"\n\nimport DialogField from \"./DialogField\"\nimport Dialog from \"./Dialog\"\n\nimport { intervalToColor } from \"./color\"\n\nexport default function Vocab(props) {\n  const { vocab } = props\n\n  const [showDialog, setShowDialog] = useState(false)\n\n  return vocab ? (\n    <React.Fragment>\n      <div\n        className=\"vocab\"\n        onClick={() => setShowDialog(true)}\n        key={vocab}\n        style={{\n          backgroundColor: vocab.interval_avg\n            ? intervalToColor(vocab.interval_avg)\n            : \"white\"\n        }}\n      >\n        {vocab.fields.Characters.value}\n      </div>\n      {showDialog ? (\n        <Dialog hide={() => setShowDialog(false)}>\n          <h2 className=\"dialog-title\">{vocab.fields.Characters.value}</h2>\n          <DialogField item={vocab} label=\"meaning\" fieldName=\"Meaning\" />\n          <DialogField\n            item={vocab}\n            label=\"part of speech\"\n            fieldName=\"Speech_Type\"\n          />\n          <DialogField item={vocab} label=\"reading\" fieldName=\"Reading\" html />\n          <DialogField\n            item={vocab}\n            label=\"発音\"\n            fieldName=\"Reading\"\n            html\n          />\n          <DialogField\n            item={vocab}\n            label=\"meaning mnemonic\"\n            fieldName=\"Meaning_Mnemonic\"\n            html\n          />\n          <DialogField\n            item={vocab}\n            label=\"reading mnemonic\"\n            fieldName=\"Reading_Mnemonic\"\n            html\n          />\n          <DialogField\n            item={vocab}\n            label=\"日本語\"\n            fieldName=\"Context_jp\"\n            html\n          />\n          <DialogField item={vocab} label=\"英語\" fieldName=\"Context_en\" html />\n          <DialogField\n            item={vocab}\n            label=\"日本語\"\n            fieldName=\"Context_jp_2\"\n            html\n          />\n          <DialogField item={vocab} label=\"英語\" fieldName=\"Context_en_2\" html />\n          <DialogField\n            item={vocab}\n            label=\"日本語\"\n            fieldName=\"Context_jp_3\"\n            html\n          />\n          <DialogField item={vocab} label=\"英語\" fieldName=\"Context_en_3\" html />\n        </Dialog>\n      ) : null}\n    </React.Fragment>\n  ) : null\n}\n","import Dexie from \"dexie\"\n\nconst db = new Dexie(\"ankidb\")\n\ndb.version(1).stores({\n  kanji: \"kanji,noteId,interval_avg,level\",\n  vocab: \"vocab,noteId,interval_avg,level\"\n})\n\nwindow.db = db\n\nexport default db\n","import React, { useState, useEffect } from \"react\"\n\nimport Kanji from \"./Kanji\"\nimport Vocab from \"./Vocab\"\n\nimport db from \"./db\"\n\nexport default function Level(props) {\n  const { level } = props\n\n  const [expanded, setExpanded] = useState(false)\n\n  const [kanji, setKanji] = useState(null)\n  const [vocab, setVocab] = useState(null)\n  const [kanjiLearned, setKanjiLearned] = useState(null)\n  const [vocabLearned, setVocabLearned] = useState(null)\n\n  useEffect(() => {\n    const foo = async () => {\n      if (expanded) {\n        const kanji = await db.kanji\n          .where(\"level\")\n          .equals(level)\n          .toArray()\n        setKanji(kanji)\n\n        const kanjiLearned = await db.kanji\n          .where(\"level\")\n          .equals(level)\n          .and(kanji => kanji.interval_avg !== 0)\n          .count()\n        setKanjiLearned(kanjiLearned)\n\n        const vocab = await db.vocab\n          .where(\"level\")\n          .equals(level)\n          .toArray()\n        setVocab(vocab)\n\n        const vocabLearned = await db.vocab\n          .where(\"level\")\n          .equals(level)\n          .and(vocab => vocab.interval_avg !== 0)\n          .count()\n        setVocabLearned(vocabLearned)\n      }\n    }\n    foo()\n  }, [expanded])\n\n  return (\n    <div className=\"level\">\n      <div className=\"level-header\">\n        <div class=\"level-name\" onClick={() => setExpanded(!expanded)}>\n          {level}\n        </div>\n        {expanded ? (\n          <div class=\"refresh\">\n            リフレッシュ\n          </div>\n        ) : null}\n      </div>\n      {expanded ? (\n        <div className=\"level\">\n          <div className=\"sub-level-heading\">\n            <h3>漢字</h3>\n            {kanjiLearned ? (\n              <div className=\"num-learned\">\n                {kanjiLearned} / {kanji.length}\n              </div>\n            ) : null}\n          </div>\n          {kanji ? (\n            <div className=\"kanjis\">\n              {kanji.map(kanji => (\n                <Kanji kanji={kanji} key={kanji.kanji} />\n              ))}\n            </div>\n          ) : null}\n          <div className=\"sub-level-heading\">\n            <h3>語彙</h3>\n            {vocabLearned ? (\n              <div className=\"num-learned\">\n                {vocabLearned} / {vocab.length}\n              </div>\n            ) : null}\n          </div>\n          {vocab ? (\n            <div className=\"vocabs\">\n              {vocab.map(vocab => (\n                <Vocab vocab={vocab} key={vocab.vocab} />\n              ))}\n            </div>\n          ) : null}\n        </div>\n      ) : null}\n    </div>\n  )\n}\n","import React from \"react\"\nimport { times } from \"ramda\"\n\nimport Level from \"./Level\"\n\nimport db from \"./db\"\n\nconst levels = times(n => n + 1, 60)\n\nexport default function HomePage() {\n\n  return (\n    <div className=\"App\">\n      <div className=\"item-list\">\n        {levels.map(level => (\n          <Level level={level} key={level} />\n        ))}\n      </div>\n    </div>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\")\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\")\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      )\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import React from \"react\"\nimport \"./App.css\"\n\nimport HomePage from \"./HomePage\"\n\nexport default function App() {\n  return (\n    <HomePage />\n  )\n}\n"],"sourceRoot":""}